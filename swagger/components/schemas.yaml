# Updated schemas.yaml
# Data models for the API

AiMessagingStandard:
  type: object
  description: |
    Configuration for the Standard AI Messaging tier. 
    Each bundle provides 5,000 AI messages and 2 knowledge bases. 
    Multiple bundles can be purchased to increase messages and knowledge bases.
    This tier cannot be combined with the Advanced tier.
  properties:
    standardBundles:
      type: integer
      minimum: 0
      description: "Number of Standard AI Messaging bundles to purchase."
      example: 5
    advancedBundles:
      type: integer
      description: "Must be 0 when standardBundles is greater than 0."
      example: 0
      enum: [0] # Enforce that this must be 0
  required:
    - standardBundles
    - advancedBundles

AiMessagingAdvanced:
  type: object
  description: |
    Configuration for the Advanced AI Messaging tier. 
    Choose this tier for 3rd party integration support (e.g., CRMs).
    Each bundle provides 5,000 AI messages and 5 knowledge bases.
    This tier cannot be combined with the Standard tier.
  properties:
    standardBundles:
      type: integer
      description: "Must be 0 when advancedBundles is greater than 0."
      example: 0
      enum: [0] # Enforce that this must be 0
    advancedBundles:
      type: integer
      minimum: 0
      description: "Number of Advanced AI Messaging bundles to purchase."
      example: 3
  required:
    - standardBundles
    - advancedBundles
Error:
  type: object
  properties:
    code:
      type: string
      description: Error code
      example: VALIDATION_ERROR
      enum:
        - VALIDATION_ERROR
        - INVALID_TOKEN
        - INVALID_SIGNATURE
        - CUSTOMER_NOT_FOUND
        - DUPLICATE_JTI
        - INVALID_JTI
        - EXPIRED_TOKEN
    message:
      type: string
      description: Human-readable error message
  required:
    - code
    - message

LicenseUpdateRequest:
  type: object
  properties:
    ccId:
      type: object
      description: Customer contact center identification (required)
      properties:
        resellerId:
          type: string
          description: Reseller identifier
          example: "RESELLER001"
        divisionId:
          type: string
          description: Division identifier
          example: "DIV456"
      required:
        - resellerId
        - divisionId
    digitalOnlySeats:
      type: integer
      minimum: 0
      description: |
        Number of Digital Only tier seats (optional).
        If present: Must be either 0 (remove license) or >= 10.
        Value of 0 indicates license removal.
      example: 15
    essentialSeats:
      type: integer
      minimum: 0
      description: |
        Number of Essential tier seats (optional).
        If present: Must be either 0 (remove license) or >= 10.
        Value of 0 indicates license removal.
      example: 15
    professionalSeats:
      type: integer
      minimum: 0
      description: |
        Number of Professional tier seats (optional).
        If present: Must be either 0 (remove license) or >= 10.
        Value of 0 indicates license removal.
      example: 15
    eliteSeats:
      type: integer
      minimum: 0
      description: |
        Number of Elite tier seats (optional).
        If present: Must be either 0 (remove license) or >= 10.
        Value of 0 indicates license removal.
      example: 15
    workforceOptimizationSeats:
      type: integer
      minimum: 0
      description: |
        Number of Workforce Optimization seats (optional).
        If present: Must be either 0 (remove license) or >= 10.
        Value of 0 indicates license removal.
      example: 10
    workforceManagementSeats:
      type: integer
      minimum: 0
      description: |
        Number of Workforce Management seats (optional).
        If present: Must be either 0 (remove license) or >= 10.
        Value of 0 indicates license removal.
      example: 10
    speechAnalyticsSeats:
      type: integer
      minimum: 0
      description: |
        Number of Speech Analytics seats (optional).
        If present: Must be either 0 (remove license) or >= 5.
        Value of 0 indicates license removal.
      example: 5
    dialerSeats:
      type: integer
      minimum: 0
      description: |
        Number of Dialer seats (optional).
        If present: Must be either 0 (remove license) or >= 5.
        Value of 0 indicates license removal.
      example: 5
    ehrEmrIntegrationSeats:
      type: integer
      minimum: 0
      description: |
        Number of EHR/EMR integration seats (optional).
        If present: Must be either 0 (remove license) or >= 1.
        Value of 0 indicates license removal.
      example: 1
    aiMessaging:
      type: object
      description: |
        AI Messaging configuration (optional).
        **Mutual Exclusivity Rule**: Only one bundle type can be > 0 at a time.
        Each field is optional within the object.
        Value of 0 indicates license removal for that bundle type.
      properties:
        standardBundles:
          type: integer
          minimum: 0
          description: |
            Number of Standard AI Messaging bundles (optional).
            Each bundle provides 5,000 messages and 2 knowledge bases.
            Cannot be > 0 if advancedBundles > 0.
          example: 5
        advancedBundles:
          type: integer
          minimum: 0
          description: |
            Number of Advanced AI Messaging bundles (optional).
            Each bundle provides 5,000 messages and 5 knowledge bases.
            Required for 3rd party integrations.
            Cannot be > 0 if standardBundles > 0.
          example: 0
    aiAudioServices:
      type: object
      description: |
        AI Audio Services configuration (optional).
        If present, must contain additionalHours field.
        Value of 0 indicates license removal.
      properties:
        additionalHours:
          type: integer
          minimum: 0
          description: |
            Number of additional AI transcription hours (required if aiAudioServices is present).
            Professional and Elite seats include base hours per agent.
          example: 25
      required:
        - additionalHours
    sipCredentials:
      type: object
      description: |
        SIP credentials for upstream SIP registration (optional).
        If present, all fields within the object are required.
      properties:
        username:
          type: string
          minLength: 1
          description: SIP username for registration (required if sipCredentials is present)
          example: "user123"
        password:
          type: string
          minLength: 1
          description: SIP password for registration (required if sipCredentials is present)
          example: "secret"
        sipPort:
          type: integer
          minimum: 1
          maximum: 65535
          description: SIP port number (required if sipCredentials is present)
          example: 5061
        sipServer:
          type: string
          minLength: 1
          description: SIP server hostname or IP (required if sipCredentials is present)
          example: "sip_server.example.com"
        transport:
          type: string
          enum: ["udp", "tcp", "tls"]
          description: SIP transport protocol (required if sipCredentials is present)
          example: "udp"
        outboundProxy:
          type: string
          minLength: 1
          description: Outbound proxy server (required if sipCredentials is present)
          example: "outbound.example.com"
      required:
        - username
        - password
        - sipPort
        - sipServer
        - transport
        - outboundProxy
  required:
    - ccId

LicenseUpdateResponse:
  type: object
  properties:
    ccId:
      type: object
      description: Customer identifiers
      properties:
        resellerId:
          type: string
          description: Reseller identifier
          example: "RESELLER001"
        divisionId:
          type: string
          description: Division identifier
          example: "DIV456"
      required:
        - resellerId
        - divisionId
    changes:
      type: object
      description: Details of the changes made to the license. Only fields that were changed as a result of the POST are included in the response.
      properties:
        digitalOnlySeats:
          $ref: '#/ChangeDetails'
          description: Only included if digitalOnlySeats was changed.
        essentialSeats:
          $ref: '#/ChangeDetails'
          description: Only included if essentialSeats was changed.
        professionalSeats:
          $ref: '#/ChangeDetails'
          description: Only included if professionalSeats was changed.
        eliteSeats:
          $ref: '#/ChangeDetails'
          description: Only included if eliteSeats was changed.
        workforceOptimizationSeats:
          $ref: '#/ChangeDetails'
          description: Only included if workforceOptimizationSeats was changed.
        workforceManagementSeats:
          $ref: '#/ChangeDetails'
          description: Only included if workforceManagementSeats was changed.
        speechAnalyticsSeats:
          $ref: '#/ChangeDetails'
          description: Only included if speechAnalyticsSeats was changed.
        dialerSeats:
          $ref: '#/ChangeDetails'
          description: Only included if dialerSeats was changed.
        aiMessaging:
          type: object
          description: Only included if aiMessaging was changed.
          properties:
            standardBundles:
              $ref: '#/ChangeDetails'
            advancedBundles:
              $ref: '#/ChangeDetails'
        aiAudioServices:
          type: object
          description: Only included if aiAudioServices was changed.
          properties:
            additionalHours:
              $ref: '#/ChangeDetails'
        ehrEmrIntegrationSeats:
          $ref: '#/ChangeDetails'
          description: Only included if ehrEmrIntegrationSeats was changed.
        sipCredentials:
          type: object
          description: |
            Delta of SIP credentials if they were changed. Only included in the response if SIP credentials were modified.
          properties:
            username:
              $ref: '#/ChangeDetails'
            password:
              $ref: '#/ChangeDetails'
            domain:
              $ref: '#/ChangeDetails'
            proxy:
              $ref: '#/ChangeDetails'
            register:
              $ref: '#/ChangeDetails'
            authUser:
              $ref: '#/ChangeDetails'
            outboundProxy:
              $ref: '#/ChangeDetails'
  required:
    - ccId
    - changes

ChangeDetails:  # New reusable schema for change details
  type: object
  properties:
    oldValue:
      description: Value before the update.
      example: 10
      oneOf:
        - type: integer
        - type: string
        - type: boolean
    newValue:
      description: Value after the update.
      example: 15
      oneOf:
        - type: integer
        - type: string
        - type: boolean
  required:
    - oldValue
    - newValue
